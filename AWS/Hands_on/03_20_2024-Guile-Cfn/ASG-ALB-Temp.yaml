AWSTemplateFormatVersion: 2010-09-09
Description: |
  This temp creates an ASG behind an ALB. 
# kullanici stack ayaga kalkarken bazi seyleri degistirmk isteyebilir,buradaki herseyi yazildigi gibi kullanmak istemeyebilir,hangi instance hangi keypair sececeksin,bazi parametreleri degistirmek icin var burasi
Parameters:
  VPCParameter: #vpc ler networkle ilgili ayarlari iceriyor ilerde görecegiz 
    Description: Select VPC. #kullaniciya vpc sectirmek icin bunu olusturduk
    Type: AWS::EC2::VPC::Id
  
  SubnetParameter: #subnet yazip parameter-type-subnet-list i sececegiz,1 den fazla subnt sececegim icin,yoksa list olmayani secerdik
    Description: Select at least 2 subnets. #Loadbalancer en az 2 AZ sectiriyordu bize bizde 2 tane sec dedik
    Type: List<AWS::EC2::Subnet::Id>

  InstanceTypeParameter: #doc dan bakip yazdi
    Description: Select instance type. #instance in tipini sec
    Type: String
    Default: t2.micro
    AllowedValues: #bununla secenekleri kisitladik,bu ücünden birinden secebilir kullanici ayaga kaldirirken sistemi 
      - t2.micro
      - t3.micro
      - t2.nano

  KeyPairParameter: #keypair yazinca asagi gelen parameter-type-keypair i secersen kullanirken sectirecek 
    Description: Select key pair.
    Type: AWS::EC2::KeyPair::KeyName
#biz mapping tanimlamasa idik,farkli Region larda gelip imageid yi degistirmek gerekecekti
Mappings: #bir degere birseyler atiyor,
  RegionImageMap:
    us-east-1:
      AMI: ami-0d7a109bf30624c99 # bunu ec2 da N.virginia nin imageid sini aldi istersek ilgi duydugumuz Region larin idlerini alip asagidakileri guncelleyebiliriz
    us-east-2:
      AMI: ami-0103f211a154d64a6
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538
    eu-west-1:
      AMI: ami-058b1b7fe545997ae

Resources: 
  myALB: #applicationloadbalancer
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt mySG.GroupId
      Subnets: !Ref SubnetParameter 
      Type: application

  myListener: # bu ayri bir resourch olarak geciyor load balancer in altinda degil
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward #gelen trafigi target grupa forward ediyor
          TargetGroupArn: !Ref myTG #ref ile bagladik target grupa
      LoadBalancerArn: !Ref myALB # Required myALB nin lestener i.
      Port: 80
      Protocol: HTTP 

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLT #olusturdugumuz launch temp'a atadik
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs: #hangi target groupta olusturayim instance lari diyor,asagida sectik
        - !Ref myTG
      VPCZoneIdentifier: !Ref SubnetParameter #yukarda az sectik 

  myCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref myASG  # Required Hangi ASG un policy si oldugunu sectik
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0 # %60 CPU tutacak sekilde ayarlayacak

  myLT: #Launchtemplate yazip ec2-launchtemplate sec
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap # imageId yi Map te bul demis oluyorz
          - RegionImageMap #hangi map oldugunu dedik,bu mapte bulcak,ama ordaki hangi degeri dönecek?
          - !Ref 'AWS::Region' #AWS hangi Region da ise onu bul ve sec demis oluyoruz.
          - AMI
        InstanceType: !Ref InstanceTypeParameter # yukardaki parametrer da kullanici buna ne secerse gelip buraya atanacak ref sayesinde,buraya baglamis olduk
        KeyName: !Ref KeyPairParameter #kullanicinin sectigi keypair i atar
        SecurityGroupIds: # eger vpc si default olamayan vpcler kullanacaksak secrt.groupID kullanmalisin,doc dan bakti.ilerde vpc yi kendimiz olusturacagiz
          - !GetAtt mySG.GroupId #groupId de ref yerine FnGetAtt kullaniliyor, git benim secr grubunun groupid sini al demis olduk
          # Base64, metni ASCII karakter seti dışındaki karakterler içerebilecek durumlarda sorun olamamsi icin kullanilir.Farkli kullanim sekilleri var, dokumandan bakabilirsin ama !Base yazinca cikiyor secebilirsin. bunun sayesinde asagidaki userdatayi encode edip yazabildik
        UserData: !Base64 |
          #! /bin/bash
          yum update -y
          yum install -y httpd
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          DATE_TIME=`date`
          chmod -R 777 /var/www/html
          echo "<html>
          <head>
              <title> Congratulations! You have created an instance from Launch Template</title>
          </head>
          <body>
              <h1>This web server is launched from launch template by YOUR_NAME</h1>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd

  myTG: #target group u olusturuyoruz,target yazip ElasticLoadBalancingV2 yi secti,applicationLoadBAlancer icin V2 eger Clasik load balancer kullansaydik V1 i sececektik,dokumanlardan bakip anlayabilirsin hangisini kullanman gerektigini
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10 #   10 sn de bir check yap diyor
      HealthCheckTimeoutSeconds: 5 # 5 sn cevap gelmezse hata vermis Healtcheck olarak kabul etkabul et
      HealthyThresholdCount: 5 #5 tanesi arka arkaya duzgun calisiyorsu saglikli kabul et
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2 #2 tane arka arkaya hata verirse sagliksiz kabul et
      VpcId: !Ref VPCParameter
#önce burdan basladi,siralama önemli degil,ayri ayri tüm gruplari olusturup sonra iliskilendirmeniz önemli
  mySG: #securty yazip asagidan ec2-securitygroup u secti,mantikli bi isim verdi. burasi onemli hem bize baktigimizda fikir verecek,hemde iliskilendirme yaptigimizda bu secrt. groupu git ASG lardaki instance larda kullan dedigimizde bu LogicalID yi kullaniyor. Stack olustururken bu LogicalID ye bir physicalID karsilik geliyor 
    Type: AWS::EC2::SecurityGroup
    Properties: #özellikleri,buradaki herseyi kullanmasakta o kendi default degeri atiyor bazilarini kullanip degistirdi,ihtiyacin olmayani degistirmeye gerek yok
      GroupDescription: Allows SSH and HTTP # Required (zorunlu) SSH a ve HTTP ye izin verir 
      SecurityGroupIngress: #inbound kurallarini giriyoruz,security-group-ingrres-cidr blogunu secti ,Engres i> outbound kurllari default olarak acikti,onu sildi
        - IpProtocol: tcp #array oldugu icin - koyduk basina
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 #tüm dünyadan buna baglanilabilsin
        - IpProtocol: tcp
          FromPort: 80 #web sitemizi host edebilmek icin bu portuda actik
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPCParameter
#stack olustuktan sonra loadbalancer a gidip dns adresini kopyalayip bakmak yerine aws bize direk cikti olarak görmek istedigimiz seyleri verecek burasi sayesinde
Outputs:
  LoadBalancerDNSName:
    Description: The DNSName of the application load balancer. #load balancer in dnsname ini al
    Value: !Join #asagidaki iki ifadeyi birbirine bagliyoruz,bosluk koymadan 
      - '' #delimiter
      - - 'http://' #buraya asagidan gelecek adresi yazmis olacak
        - !GetAtt myALB.DNSName #git benim ALB imin dnsname ini al
     